<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\UVBuild\kl05test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\UVBuild\kl05test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue Mar 17 00:01:02 2015
<BR><P>
<H3>Maximum Stack Usage =         80 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; ax25Send &rArr; WAIT1_Waitms &rArr; WAIT1_WaitLongCycles &rArr; WAIT1_WaitCycles
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[8]">Cpu_INT_NMIInterrupt</a> from cpu.o(i.Cpu_INT_NMIInterrupt) referenced from vectors.o(.vectortable)
 <LI><a href="#[9]">Cpu_Interrupt</a> from cpu.o(i.Cpu_Interrupt) referenced 44 times from vectors.o(.vectortable)
 <LI><a href="#[a]">TU1_Interrupt</a> from tu1.o(i.TU1_Interrupt) referenced from vectors.o(.vectortable)
 <LI><a href="#[5]">__init_hardware</a> from cpu.o(i.__init_hardware) referenced from startup_arm_cc.o(.emb_text)
 <LI><a href="#[b]">__main</a> from __main.o(!!!main) referenced from startup_arm_cc.o(.emb_text)
 <LI><a href="#[7]">__thumb_startup</a> from startup_arm_cc.o(.emb_text) referenced from vectors.o(.vectortable)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[e]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[31]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[32]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[33]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[11]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[34]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[35]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[36]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[37]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[38]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[39]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[3a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[3b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[3c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[3d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[3e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[3f]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[40]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[41]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[42]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[43]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[44]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[45]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[46]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[47]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[48]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[16]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[49]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[4a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[4b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[4c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[4d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[4e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[4f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[50]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[10]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[51]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[12]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ax25Send &rArr; WAIT1_Waitms &rArr; WAIT1_WaitLongCycles &rArr; WAIT1_WaitCycles
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[1a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[15]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[53]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[17]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[7]"></a>__thumb_startup</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_arm_cc.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(.vectortable)
</UL>
<P><STRONG><a name="[28]"></a>WAIT1_Wait100Cycles</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wait1.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_WaitCycles
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25Send
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25Send
</UL>

<P><STRONG><a name="[14]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[18]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[56]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>BitIoLdd1_Init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bitioldd1.o(i.BitIoLdd1_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
</UL>

<P><STRONG><a name="[1e]"></a>BitIoLdd1_SetVal</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bitioldd1.o(i.BitIoLdd1_SetVal))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
</UL>

<P><STRONG><a name="[8]"></a>Cpu_INT_NMIInterrupt</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, cpu.o(i.Cpu_INT_NMIInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Cpu_INT_NMIInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cpu_OnNMIINT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(.vectortable)
</UL>
<P><STRONG><a name="[9]"></a>Cpu_Interrupt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpu.o(i.Cpu_Interrupt))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(.vectortable)
</UL>
<P><STRONG><a name="[1b]"></a>Cpu_OnNMIINT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, events.o(i.Cpu_OnNMIINT))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cpu_INT_NMIInterrupt
</UL>

<P><STRONG><a name="[1f]"></a>DA1_Init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, da1.o(i.DA1_Init))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
</UL>

<P><STRONG><a name="[2d]"></a>DA1_SetValue</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, da1.o(i.DA1_SetValue))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25Send
</UL>

<P><STRONG><a name="[1c]"></a>PE_low_level_init</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, cpu.o(i.PE_low_level_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PE_low_level_init &rArr; TI1_Init &rArr; TU1_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DA1_Init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitIoLdd1_SetVal
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitIoLdd1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>TI1InterruptHand</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, events.o(i.TI1InterruptHand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TI1InterruptHand
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25TimerIntHand
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TU1_OnCounterRestart
</UL>

<P><STRONG><a name="[23]"></a>TI1_Enable</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ti1.o(i.TI1_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TI1_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TU1_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25TimerInit
</UL>

<P><STRONG><a name="[20]"></a>TI1_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ti1.o(i.TI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TI1_Init &rArr; TU1_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TU1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
</UL>

<P><STRONG><a name="[24]"></a>TU1_Enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tu1.o(i.TU1_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Enable
</UL>

<P><STRONG><a name="[25]"></a>TU1_Init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, tu1.o(i.TU1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TU1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Init
</UL>

<P><STRONG><a name="[a]"></a>TU1_Interrupt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tu1.o(i.TU1_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TU1_Interrupt &rArr; TU1_OnCounterRestart &rArr; TI1InterruptHand
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TU1_OnCounterRestart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(.vectortable)
</UL>
<P><STRONG><a name="[26]"></a>TU1_OnCounterRestart</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ti1.o(i.TU1_OnCounterRestart))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TU1_OnCounterRestart &rArr; TI1InterruptHand
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1InterruptHand
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TU1_Interrupt
</UL>

<P><STRONG><a name="[29]"></a>WAIT1_Wait10Cycles</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wait1.o(i.WAIT1_Wait10Cycles))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25Send
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_WaitCycles
</UL>

<P><STRONG><a name="[27]"></a>WAIT1_WaitCycles</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wait1.o(i.WAIT1_WaitCycles))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WAIT1_WaitCycles
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_Wait10Cycles
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_Wait100Cycles
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_WaitLongCycles
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25Send
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>WAIT1_WaitLongCycles</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wait1.o(i.WAIT1_WaitLongCycles))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WAIT1_WaitLongCycles &rArr; WAIT1_WaitCycles
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_WaitCycles
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_Waitms
</UL>

<P><STRONG><a name="[2b]"></a>WAIT1_Waitms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, wait1.o(i.WAIT1_Waitms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WAIT1_Waitms &rArr; WAIT1_WaitLongCycles &rArr; WAIT1_WaitCycles
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_WaitLongCycles
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25Send
</UL>

<P><STRONG><a name="[5]"></a>__init_hardware</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, cpu.o(i.__init_hardware))
<BR>[Address Reference Count : 1]<UL><LI> startup_arm_cc.o(.emb_text)
</UL>
<P><STRONG><a name="[2c]"></a>ax25Send</STRONG> (Thumb, 428 bytes, Stack size 32 bytes, ax25.o(i.ax25Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ax25Send &rArr; WAIT1_Waitms &rArr; WAIT1_WaitLongCycles &rArr; WAIT1_WaitCycles
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25TimerInit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DA1_SetValue
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_Waitms
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_Wait10Cycles
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_WaitCycles
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>ax25TimerInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ax25.o(i.ax25TimerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ax25TimerInit &rArr; TI1_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25Send
</UL>

<P><STRONG><a name="[22]"></a>ax25TimerIntHand</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, ax25.o(i.ax25TimerIntHand))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1InterruptHand
</UL>

<P><STRONG><a name="[13]"></a>main</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = main &rArr; ax25Send &rArr; WAIT1_Waitms &rArr; WAIT1_WaitLongCycles &rArr; WAIT1_WaitCycles
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ax25Send
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAIT1_WaitCycles
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DA1_Init
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[19]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
